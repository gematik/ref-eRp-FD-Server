{
    "resourceType":"Parameters",
    "parameter":[{
        "name":"erxBinary",
        "resource":{
            "resourceType":"Binary",
            "contentType":"application/pkcs7-mime",
            "data":""
        }
    }]
}
