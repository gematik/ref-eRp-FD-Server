[package]
name = "ref-erx-fd-server"
version = "0.1.0"
edition = "2018"

[features]
default = [
    "interface-patient",
    "interface-supplier",
    "vau-compat"
]

# Enables the routes for the patient interface
interface-patient = [ "support-json" ]
# Enables the routes for the supplier interface
interface-supplier = [ "support-json", "support-xml" ]

# Add support for JSON De-/Serialization
support-json = [ "serde_json", "serde_asn1_der" ]
# Add support for XML De-/Serialization
support-xml = [ "quick-xml", "serde_asn1_der" ]

# Enables the VAU adapter in compatibility mode.
# This means that the normal routes are still enabled.
vau-compat = [ ]

[dependencies]
actix-codec = "0.3"
actix-http = "2.0"
actix-router = "0.2"
actix-rt = "1.1"
actix-web = "= 3.0.2"
arc-swap = "0.4"
asn1_der = "0.7"
base64 = "0.12"
bytes = "0.5"
chrono = "0.4"
encoding_rs = "0.8"
futures = "0.3"
jwt = { version = "0.10", features = [ "openssl" ]}
lazy_static = "1.4"
log = { version = "0.4", features = ["max_level_trace", "release_max_level_info"] }
log4rs = "0.11.0"
mime = "0.3"
openssl = "0.10"
proc-macros = { path = "../proc-macros" }
quick-xml = { version = "0.18.1", optional = true, features = [ "serialize" ] }
rand = "0.7"
regex = "1.3"
reqwest = { version = "0.10", default-features = false, features = [ "rustls-tls" ] }
resources = { path = "../resources" }
serde = { version = "1.0", features = [ "derive" ] }
serde_asn1_der = { version = "0.7", optional = true }
serde_json = { version = "1.0", optional = true }
structopt = "0.3"
thiserror = "1.0"
tokio = { version = "0.2", features = [ "sync", "rt-core", "rt-threaded", "macros", "signal" ] }
url = "2.1"
vau = { path = "../vau" }
